{"ast":null,"code":"var _jsxFileName = \"/Users/nikitajha/Documents/NikitaFinal/Coding Projects/AthensAI/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [prompt, setPrompt] = useState('');\n  const [generatedText, setGeneratedText] = useState('');\n  const handleChange = event => {\n    setPrompt(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5000/generate', {\n        prompt\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setGeneratedText(response.data);\n    } catch (error) {\n      console.error('Error generating text:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Text Generator using GPT-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter a prompt:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: prompt,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), generatedText && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Generated text: \", generatedText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aBe666HlkKdeZ7lJRos1ILu9w5Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","prompt","setPrompt","generatedText","setGeneratedText","handleChange","event","target","value","handleSubmit","preventDefault","response","post","headers","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/Users/nikitajha/Documents/NikitaFinal/Coding Projects/AthensAI/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [prompt, setPrompt] = useState('');\n  const [generatedText, setGeneratedText] = useState('');\n\n  const handleChange = (event) => {\n    setPrompt(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n  \n    try {\n      const response = await axios.post('http://localhost:5000/generate', { prompt }, {\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      setGeneratedText(response.data);\n    } catch (error) {\n      console.error('Error generating text:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Text Generator using GPT-4</h1>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Enter a prompt:\n          <input type=\"text\" value={prompt} onChange={handleChange} />\n        </label>\n        <button type=\"submit\">Generate Text</button>\n      </form>\n      {generatedText && <p>Generated text: {generatedText}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMU,YAAY,GAAIC,KAAK,IAAK;IAC9BJ,SAAS,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IACpCA,KAAK,CAACI,cAAc,EAAE;IAEtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,gCAAgC,EAAE;QAAEX;MAAO,CAAC,EAAE;QAC9EY,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MACFT,gBAAgB,CAACO,QAAQ,CAACG,IAAI,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKmB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBpB,OAAA;MAAAoB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACnCxB,OAAA;MAAMyB,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBAC3BpB,OAAA;QAAAoB,QAAA,GAAO,iBAEL,eAAApB,OAAA;UAAO0B,IAAI,EAAC,MAAM;UAAChB,KAAK,EAAEP,MAAO;UAACwB,QAAQ,EAAEpB;QAAa;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACtD,eACRxB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvC,EACNnB,aAAa,iBAAIL,OAAA;MAAAoB,QAAA,GAAG,kBAAgB,EAACf,aAAa;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpD;AAEV;AAACtB,EAAA,CApCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}